library(readr)
library(openxlsx) #biblioteca para escrever arquivo em excel
library(haven)
library(readxl)
library(tidyverse)
library(yardstick) #biblioteca para calcular medidas de erro
library(lmtest) # calcula o teste de homogeneidade de variancia
library(car) # calcula vif
estudante <- c(2,6,8,8,12,16,20,20,22,26)
pizza <- c(55,105,88,118,117,137,157,169,149,202)
dados <- cbind(estudante,pizza)
dados_pizzaria <- as.data.frame(dados)
plot(dados_pizzaria$estudante, dados_pizzaria$pizza)
reg_simples <- lm(pizza ~ estudante, data=dados_pizzaria)
summary(reg_simples)
write.xlsx(dados_pizzaria,file = "pizzaria.xlsx", sheetName = "RLSotimizador", append=TRUE )
dados_pizzaria$resp_modelo <- predict(reg_simples, newdata = dados_pizzaria)
dados_pizzaria$resp_media <- mean(dados_pizzaria$pizza)
dados_pizzaria %>% select(pizza, resp_modelo, resp_media)
mse <- mean((dados_pizzaria$pizza - dados_pizzaria$resp_modelo)^2)
mse
rmse_model <- sqrt(mse)
rmse_model
mse_usando_media <- mean((dados_pizzaria$pizza - dados_pizzaria$resp_media)^2)
mse_usando_media
rmse_usando_media <- sqrt(mse_usando_media)
rmse_usando_media
rmse(dados_pizzaria, truth = pizza, estimate = resp_modelo)
rmse(dados_pizzaria, truth = pizza, estimate = resp_media)
dados_bodyfat <- read.csv(file = "dados/Bodyfat.csv")
View(dados_bodyfat)
summary(dados_bodyfat$bodyfat)
summary(dados_bodyfat$Wrist)
# variavel bodyfat
boxplot(dados_bodyfat$bodyfat)
hist(dados_bodyfat$bodyfat)
boxplot(dados_bodyfat$Wrist)
hist(dados_bodyfat$Wrist)
boxplot(dados_bodyfat$bodyfat,dados_bodyfat$Wrist)
plot(dados_bodyfat$Wrist, dados_bodyfat$bodyfat)
?cor
cor(dados_bodyfat$bodyfat, dados_bodyfat$Wrist)
library(readr)
library(openxlsx) #biblioteca para escrever arquivo em excel
library(haven)
library(readxl)
library(tidyverse)
library(yardstick) #biblioteca para calcular medidas de erro
library(lmtest) # calcula o teste de homogeneidade de variancia
library(car) # calcula vif
summary(dados_bodyfat$Wrist)
boxplot(dados_bodyfat$bodyfat)
hist(dados_bodyfat$bodyfat)
boxplot(dados_bodyfat$Wrist)
hist(dados_bodyfat$Wrist)
boxplot(dados_bodyfat$bodyfat,dados_bodyfat$Wrist)
plot(dados_bodyfat$Wrist, dados_bodyfat$bodyfat)
cor(dados_bodyfat$bodyfat, dados_bodyfat$Wrist)
0.3465749^2
reg_gordura_wirst <- lm(dados_bodyfat$bodyfat ~ dados_bodyfat$Wrist)
summary(reg_gordura_wirst)
reg_gordura_abdomen_biceps <- lm(dados_bodyfat$bodyfat ~ dados_bodyfat$Abdomen + dados_bodyfat$Biceps)
summary(reg)
summary(reg_gordura_abdomen_biceps)
reg_gordura_wirst <- lm(dados_bodyfat$bodyfat ~ dados_bodyfat$Wrist)
summary(reg_gordura_wirst)
summary(reg_gordura_abdomen_biceps)
library(readr)
library(openxlsx) #biblioteca para escrever arquivo em excel
library(haven)
library(readxl)
library(tidyverse)
library(yardstick) #biblioteca para calcular medidas de erro
library(lmtest) # calcula o teste de homogeneidade de variancia
library(car) # calcula vif
# exemplo pizza
estudante <- c(2,6,8,8,12,16,20,20,22,26)
pizza <- c(55,105,88,118,117,137,157,169,149,202)
dados <- cbind(estudante,pizza)
dados_pizzaria <- as.data.frame(dados)
plot(dados_pizzaria$estudante, dados_pizzaria$pizza)
?cbind
#modelo MRLS
reg_simples <- lm(pizza ~ estudante, data=dados_pizzaria)
summary(reg_simples)
write.xlsx(dados_pizzaria,file = "pizzaria.xlsx", sheetName = "RLSotimizador", append=TRUE )
dados_pizzaria$resp_modelo <- predict(reg_simples, newdata = dados_pizzaria)
dados_pizzaria$resp_media <- mean(dados_pizzaria$pizza)
dados_pizzaria %>% select(pizza, resp_modelo, resp_media)
#MSE do modelo
mse <- mean((dados_pizzaria$pizza - dados_pizzaria$resp_modelo)^2)
mse
rmse_model <- sqrt(mse)
rmse_model
#MSE usando apenas média ao inves do modelo
mse_usando_media <- mean((dados_pizzaria$pizza - dados_pizzaria$resp_media)^2)
mse_usando_media
rmse_usando_media <- sqrt(mse_usando_media)
rmse_usando_media
# usando a biblioteca yardstick
# Métricas de erro
rmse(dados_pizzaria, truth = pizza, estimate = resp_modelo)
rmse(dados_pizzaria, truth = pizza, estimate = resp_media)
dados_bodyfat <- read.csv(file = "dados/Bodyfat.csv")
summary(dados_bodyfat$bodyfat)
summary(dados_bodyfat$Wrist)
summary(dados_bodyfat$Wrist)
boxplot(dados_bodyfat$bodyfat)
hist(dados_bodyfat$bodyfat)
boxplot(dados_bodyfat$Wrist)
hist(dados_bodyfat$Wrist)
boxplot(dados_bodyfat$bodyfat,dados_bodyfat$Wrist)
plot(dados_bodyfat$Wrist, dados_bodyfat$bodyfat)
cor(dados_bodyfat$bodyfat, dados_bodyfat$Wrist)
reg_gordura_wirst <- lm(dados_bodyfat$bodyfat ~ dados_bodyfat$Wrist)
summary(reg_gordura_wirst)
reg_gordura_abdomen_biceps <- lm(dados_bodyfat$bodyfat ~ dados_bodyfat$Abdomen + dados_bodyfat$Biceps)
summary(reg_gordura_abdomen_biceps)
reg_gordura_full <- lm(dados_bodyfat$bodyfat ~ - dados_bodyfat$Density )
summary(reg_gordura_full)
reg_gordura_full <- lm(dados_bodyfat$bodyfat ~ .dados_bodyfat$Density )
?lm
reg_gordura_full <- lm(dados_bodyfat$bodyfat ~. -dados_bodyfat$Density)
?lm
summary(reg_gordura_full)
reg_gordura_full <- lm(dados_bodyfat$bodyfat ~. -dados_bodyfat$Density)
reg_gordura_full <- lm(dados_bodyfat$bodyfat ~. )
reg_gordura_full <- lm(dados_bodyfat$bodyfat ~.)
reg_gordura_full <- lm(bodyfat ~. Density , data = dados_bodyfat)
reg_gordura_full <- lm(bodyfat ~. - Density , data = dados_bodyfat)
?lm
summary(reg_gordura_full)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee , data = dados_bodyfat)
summary(reg_gordura_full)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee - Chest  , data = dados_bodyfat)
summary(reg_gordura_full)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee - Chest -Height  , data = dados_bodyfat)
summary(reg_gordura_full)
library(readr)
library(openxlsx) #biblioteca para escrever arquivo em excel
library(haven)
library(readxl)
library(tidyverse)
library(yardstick) #biblioteca para calcular medidas de erro
library(lmtest) # calcula o teste de homogeneidade de variancia
library(car) # calcula vif
estudante <- c(2,6,8,8,12,16,20,20,22,26)
pizza <- c(55,105,88,118,117,137,157,169,149,202)
dados <- cbind(estudante,pizza)
dados_pizzaria <- as.data.frame(dados)
plot(dados_pizzaria$estudante, dados_pizzaria$pizza)
reg_simples <- lm(pizza ~ estudante, data=dados_pizzaria)
summary(reg_simples)
write.xlsx(dados_pizzaria,file = "pizzaria.xlsx", sheetName = "RLSotimizador", append=TRUE )
dados_pizzaria$resp_modelo <- predict(reg_simples, newdata = dados_pizzaria)
dados_pizzaria$resp_media <- mean(dados_pizzaria$pizza)
dados_pizzaria %>% select(pizza, resp_modelo, resp_media)
#MSE do modelo
mse <- mean((dados_pizzaria$pizza - dados_pizzaria$resp_modelo)^2)
mse
rmse_model <- sqrt(mse)
rmse_model
#MSE usando apenas média ao inves do modelo
mse_usando_media <- mean((dados_pizzaria$pizza - dados_pizzaria$resp_media)^2)
mse_usando_media
rmse_usando_media <- sqrt(mse_usando_media)
rmse_usando_media
# usando a biblioteca yardstick
# Métricas de erro
rmse(dados_pizzaria, truth = pizza, estimate = resp_modelo)
rmse(dados_pizzaria, truth = pizza, estimate = resp_media)
dados_bodyfat <- read.csv(file = "dados/Bodyfat.csv")
summary(dados_bodyfat$bodyfat)
summary(dados_bodyfat$Wrist)
boxplot(dados_bodyfat$bodyfat)
hist(dados_bodyfat$bodyfat)
boxplot(dados_bodyfat$Wrist)
hist(dados_bodyfat$Wrist)
boxplot(dados_bodyfat$bodyfat,dados_bodyfat$Wrist)
plot(dados_bodyfat$Wrist, dados_bodyfat$bodyfat)
cor(dados_bodyfat$bodyfat, dados_bodyfat$Wrist)
reg_gordura_wirst <- lm(dados_bodyfat$bodyfat ~ dados_bodyfat$Wrist)
summary(reg_gordura_wirst)
reg_gordura_abdomen_biceps <- lm(dados_bodyfat$bodyfat ~ dados_bodyfat$Abdomen + dados_bodyfat$Biceps)
summary(reg_gordura_abdomen_biceps)
reg_gordura_full <- lm(bodyfat ~. - Density , data = dados_bodyfat)
?lm
summary(reg_gordura_full)
cor(dados_bodyfat$bodyfat, dados_bodyfat$Wrist)
plot(dados_bodyfat$Wrist, dados_bodyfat$bodyfat)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee , data = dados_bodyfat)
summary(reg_gordura_full)
#regressao por forward
reg_gordura_nula <- lm(bodyfat ~ 1, data=Bodyfat)
summary(reg_gordura_nula)
forw <- step(reg_gordura_nula, scope=list(lower=reg_gordura_nula, upper=reg_gordura_full), direction = "forward")
#regressao por forward
reg_gordura_nula <- lm(bodyfat ~ 1, data=Bodyfat)
#regressao por forward
reg_gordura_nula <- lm(bodyfat ~ 1, data=dados_bodyfat)
summary(reg_gordura_nula)
forw <- step(reg_gordura_nula, scope=list(lower=reg_gordura_nula, upper=reg_gordura_full), direction = "forward")
summary(forw)
forw <- step(reg_gordura_nula, scope=list(lower=reg_gordura_nula, upper=reg_gordura_full), direction = "forward")
summary(forw)
#regressao por backward
backw <-  step(reg_gordura_full, direction = "backward")
###### Pacotes
library(readr)
library(openxlsx) #biblioteca para escrever arquivo em excel
library(haven)
library(readxl)
library(tidyverse)
library(yardstick) #biblioteca para calcular medidas de erro
library(lmtest) # calcula o teste de homogeneidade de variancia
library(car) # calcula vif
###############################################
########## regressao linear simples ##########
###############################################
# exemplos basicos dos slides
# exemplo pizza
estudante <- c(2,6,8,8,12,16,20,20,22,26)
pizza <- c(55,105,88,118,117,137,157,169,149,202)
dados <- cbind(estudante,pizza)
dados_pizzaria <- as.data.frame(dados)
plot(dados_pizzaria$estudante, dados_pizzaria$pizza)
?cbind
#modelo MRLS
reg_simples <- lm(pizza ~ estudante, data=dados_pizzaria)
summary(reg_simples)
### Conceito de busca pelo otimo no excel
write.xlsx(dados_pizzaria,file = "pizzaria.xlsx", sheetName = "RLSotimizador", append=TRUE )
#calculando mse
dados_pizzaria$resp_modelo <- predict(reg_simples, newdata = dados_pizzaria)
dados_pizzaria$resp_media <- mean(dados_pizzaria$pizza)
dados_pizzaria %>% select(pizza, resp_modelo, resp_media)
#MSE do modelo
mse <- mean((dados_pizzaria$pizza - dados_pizzaria$resp_modelo)^2)
mse
rmse_model <- sqrt(mse)
rmse_model
#MSE usando apenas média ao inves do modelo
mse_usando_media <- mean((dados_pizzaria$pizza - dados_pizzaria$resp_media)^2)
mse_usando_media
rmse_usando_media <- sqrt(mse_usando_media)
rmse_usando_media
# usando a biblioteca yardstick
# Métricas de erro
rmse(dados_pizzaria, truth = pizza, estimate = resp_modelo)
rmse(dados_pizzaria, truth = pizza, estimate = resp_media)
######################################################
# exercício BODYFAT
### dados bodyfat
# importando CSV que foi baixado em: http://staff.pubhealth.ku.dk/~tag/Teaching/share/data/Bodyfat.html
dados_bodyfat <- read.csv(file = "dados/Bodyfat.csv")
#Faça uma breve descritiva das variáveis: bodyfat e Wrist
summary(dados_bodyfat$bodyfat)
summary(dados_bodyfat$Wrist)
# variavel bodyfat
boxplot(dados_bodyfat$bodyfat)
hist(dados_bodyfat$bodyfat)
# variavel Wrist
boxplot(dados_bodyfat$Wrist)
hist(dados_bodyfat$Wrist)
# uma contra outra
boxplot(dados_bodyfat$bodyfat,dados_bodyfat$Wrist)
plot(dados_bodyfat$Wrist, dados_bodyfat$bodyfat)
#Calcule a correlação entre as duas variáveis
?cor
cor(dados_bodyfat$bodyfat, dados_bodyfat$Wrist)
#Gere uma equação de regressão linear simples entre bodyfat e Wrist
#modelo MRLS - nome do objeto reg_gordura_wirst
reg_gordura_wirst <- lm(dados_bodyfat$bodyfat ~ dados_bodyfat$Wrist)
summary(reg_gordura_wirst)
###############################################
########## regressao linear multipla ##########
###############################################
#Density bodyfat   Age Weight Height  Neck Chest Abdomen   Hip Thigh  Knee Ankle Biceps
###### fazendo o nodelo com Abdomen e Biceps
# nome do objeto reg_gordura_abdomen_biceps
reg_gordura_abdomen_biceps <- lm(dados_bodyfat$bodyfat ~ dados_bodyfat$Abdomen + dados_bodyfat$Biceps)
summary(reg_gordura_abdomen_biceps)
###### fazendo o nodelo com todas as variaveis, exceto Density
# nome do objeto reg_gordura_full
reg_gordura_full <- lm(bodyfat ~. - Density , data = dados_bodyfat)
?lm
summary(reg_gordura_full)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee , data = dados_bodyfat)
summary(reg_gordura_full)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee - Chest  , data = dados_bodyfat)
summary(reg_gordura_full)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee - Chest -Height  , data = dados_bodyfat)
summary(reg_gordura_full)
### testando com selecao de var
#regressao por forward
reg_gordura_nula <- lm(bodyfat ~ 1, data=dados_bodyfat)
summary(reg_gordura_nula)
forw <- step(reg_gordura_nula, scope=list(lower=reg_gordura_nula, upper=reg_gordura_full), direction = "forward")
summary(forw)
#regressao por backward
backw <-  step(reg_gordura_full, direction = "backward")
summary(backw)
summary(stepw)
#regressao por stepwise
stepw <- step(reg_gordura_full, direction = "both")
summary(stepw)
#### pegando a medida RMSE de cada modelo
#so estou criando uma nova tabala, para adicionar os preditos
BodyfatPreditos <- Bodyfat
BodyFat<- read.csv(file = "dados/Bodyfat.csv")
hist(BodyFat$bodyfat)
hist(BodyFat$Wrist)
reg_gordura_wirst <- lm(BodyFat$bodyfat ~ BodyFat$Wrist)
summary(reg_gordura_wirst)
reg_gordura_abdomen_biceps <- lm(BodyFat$bodyfat ~ BodyFat$Abdomen + BodyFat$Biceps)
summary(reg_gordura_abdomen_biceps)
reg_gordura_full <- lm(bodyfat ~. - Density , data = BodyFat)
summary(reg_gordura_full)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee , data = dados_bodyfat)
reg_gordura_full <- lm(BodyFat ~. - Density - Knee , data = BodyFat)
summary(reg_gordura_full)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee - Chest  , data = BodyFat)
reg_gordura_full <- lm(BodyFat ~. - Density - Knee , data = BodyFat)
reg_gordura_full <- lm(bodyfat ~. - Density - Knee , data = BodyFat)
#regressao por forward
reg_gordura_nula <- lm(bodyfat ~ 1, data=BodyFat)
summary(reg_gordura_nula)
r
#regressao por forward
reg_gordura_nula <- lm(bodyfat ~ 1, data=BodyFat)
summary(reg_gordura_nula)
forw <- step(reg_gordura_nula, scope=list(lower=reg_gordura_nula, upper=reg_gordura_full), direction = "forward")
#regressao por backward
backw <-  step(reg_gordura_full, direction = "backward")
summary(backw)
#regressao por stepwise
stepw <- step(reg_gordura_full, direction = "both")
summary(stepw)
#### pegando a medida RMSE de cada modelo
#so estou criando uma nova tabela, para adicionar os preditos
BodyfatPreditos <- Bodyfat
BodyfatPreditos$resp_media <- mean(Bodyfat$bodyfat)
BodyfatPreditos$resp_modelo_full <- predict(reg_gordura_full, newdata = BodyfatPreditos)
BodyfatPreditos$resp_modelo_forward <- predict(forw, newdata = BodyfatPreditos)
BodyfatPreditos$resp_modelo_backward <- predict(backw, newdata = BodyfatPreditos)
BodyfatPreditos$resp_modelo_stepwise <- predict(stepw, newdata = BodyfatPreditos)
#### pegando a medida RMSE de cada modelo
#so estou criando uma nova tabela, para adicionar os preditos
BodyfatPreditos <- Bodyfat
#### pegando a medida RMSE de cada modelo
#so estou criando uma nova tabela, para adicionar os preditos
BodyfatPreditos <- BodyFat
BodyfatPreditos$resp_media <- mean(BodyFat$bodyfat)
BodyfatPreditos$resp_modelo_full <- predict(reg_gordura_full, newdata = BodyfatPreditos)
BodyfatPreditos$resp_modelo_forward <- predict(forw, newdata = BodyfatPreditos)
BodyfatPreditos$resp_modelo_backward <- predict(backw, newdata = BodyfatPreditos)
BodyfatPreditos$resp_modelo_stepwise <- predict(stepw, newdata = BodyfatPreditos)
View(BodyfatPreditos)
# usando a biblioteca yardstick
# Métricas de erro
rmse(BodyfatPreditos, truth = bodyfat, estimate = resp_media)
rmse(BodyfatPreditos, truth = bodyfat, estimate = resp_modelo_full)
rmse(BodyfatPreditos, truth = bodyfat, estimate = resp_modelo_forward)
rmse(BodyfatPreditos, truth = bodyfat, estimate = resp_modelo_backward)
rmse(BodyfatPreditos, truth = bodyfat, estimate = resp_modelo_stepwise)
mae(BodyfatPreditos, truth = bodyfat, estimate = resp_media)
mae(BodyfatPreditos, truth = bodyfat, estimate = resp_modelo_full)
mae(BodyfatPreditos, truth = bodyfat, estimate = resp_modelo_forward)
mae(BodyfatPreditos, truth = bodyfat, estimate = resp_modelo_backward)
mae(BodyfatPreditos, truth = bodyfat, estimate = resp_modelo_stepwise)
# ajustado X resíduo
plot(fitted(stepw),residuals(stepw),xlab="ValoresAjustados",ylab="Resíduos")
abline(h=0)
# qqplot
qqnorm(residuals(stepw), ylab="Resíduos")
qqline(residuals(stepw))
#teste de normalidade
#h0: os dados sao normais
#h1: os dados nao sao normais
shapiro.test(stepw$residuals)
#teste de homogeneidade de variancia Breusch-Pagan test
#h0: as variâncias dos erros sao iguais (homoscedasticidade)
#h1: as variâncias dos erros nao sao iguais (heteroscedasticidade)
bptest(stepw) #library lmtest
#trazendo o dado em excel
galoes <- read_excel("dados/Galoes.xlsx")
# modelo completo
reg_galoes <- lm(Tempo_viagem ~ Galoes_gastos + Milhas_percorridas, data=galoes)
summary(reg_galoes)
#analise anterior
#existe correlacao entre as vars independentes? + scatter plot tds contra todos
pairs(galoes, col = 2, pch = 19)
cor(galoes)
summary(reg_galoes)
View(galoes)
summary(reg_galoes)
cor(galoes)
vif(reg_galoes)
vif(stepw)
source("C:/Users/gabri/OneDrive/Área de Trabalho/Data Science Analytics/R/regressao_linear/R_regressao_linear_alunos.R", echo=TRUE)
BodyFat<- read.csv(file = "dados/Bodyfat.csv")
sumary(BodyFat)
summary(BodyFat)
cor(BodyFat)
#analise anterior
#existe correlacao entre as vars independentes? + scatter plot tds contra todos
pairs(galoes, col = 2, pch = 19)
pairs(BodyFat, col = 2, pch = 19)
pairs(BodyFat, col = 2, pch = 19)
reg_gordura_nula <- lm(bodyfat ~ 1, data=BodyFat)
summary(reg_gordura_nula)
forw <- step(reg_gordura_nula, scope=list(lower=reg_gordura_nula, upper=reg_gordura_full), direction = "forward")
summary(forw)
plot(fitted(forw),residuals(forw),xlab="ValoresAjustados",ylab="Resíduos")
abline(h=0)
qqline(residuals(forw))
# qqplot
qqnorm(residuals(forw), ylab="Resíduos")
#teste de normalidade
#h0: os dados sao normais
#h1: os dados nao sao normais
shapiro.test(forw$residuals)
#teste de homogeneidade de variancia Breusch-Pagan test
#h0: as variâncias dos erros sao iguais (homoscedasticidade)
#h1: as variâncias dos erros nao sao iguais (heteroscedasticidade)
bptest(forw) #library lmtest
library(readr)
library(openxlsx) #biblioteca para escrever arquivo em excel
library(haven)
library(readxl)
library(tidyverse)
library(yardstick) #biblioteca para calcular medidas de erro
library(lmtest) # calcula o teste de homogeneidade de variancia
library(car) # calcula vif
BodyFat<- read.csv(file = "dados/Bodyfat.csv")
summary(BodyFat)
View(BodyFat)
vif(forw)
source("C:/Users/gabri/OneDrive/Área de Trabalho/Data Science Analytics/R/regressao_linear/Ex6_Lista10.R", echo=TRUE)
reg_gordura_nula <- lm(bodyfat ~ 1, data=BodyFat)
summary(reg_gordura_nula)
forw <- step(reg_gordura_nula, scope=list(lower=reg_gordura_nula, upper=reg_gordura_full), direction = "forward")
reg_gordura_full <- lm(bodyfat ~., data = BodyFat)
forw <- step(reg_gordura_nula, scope=list(lower=reg_gordura_nula, upper=reg_gordura_full), direction = "forward")
summary(forw)
plot(fitted(forw),residuals(forw),xlab="ValoresAjustados",ylab="Resíduos")
abline(h=0)
qqnorm(residuals(forw), ylab="Resíduos")
qqline(residuals(forw))
#teste de normalidade dos resíduos
#h0: os dados sao normais
#h1: os dados nao sao normais
shapiro.test(forw$residuals)
bptest(forw) #library lmtest
vif(forw)
names(BodyFat)
cor(BodyFat)
vif(forw)
source("C:/Users/gabri/OneDrive/Área de Trabalho/Data Science Analytics/R/regressao_linear/Ex6_Lista10.R", echo=TRUE)
vif(forw)
source("C:/Users/gabri/OneDrive/Área de Trabalho/Data Science Analytics/R/regressao_linear/R_regressao_linear_alunos.R", echo=TRUE)
